{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageDiv","styled","div","CollectionTitle","h2","CollectionItemsDiv","connect","state","ownProps","collection","selectCollection","match","params","collectionId","console","log","url","title","items","map","item","key","id","CollectionItemDiv","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterDiv","NameDiv","span","PriceDiv","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"wwBAEO,IAAMA,EAAoBC,IAAOC,IAAV,KAKjBC,EAAkBF,IAAOG,GAAV,KAKfC,EAAqBJ,IAAOC,IAAV,K,QCuBhBI,uBAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EArBQ,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,WAAaE,EAAY,EAAZA,MAErC,OADAG,QAAQC,IAAI,OAASJ,EAAMK,KACL,OAAfP,EACP,kBAAC,IAAD,MAEA,kBAACT,EAAD,KACE,kBAACG,EAAD,KAAkBM,EAAWQ,OAC7B,kBAACZ,EAAD,KACGI,EAAWS,MAAMC,KAAI,SAAAC,GAAI,OACxB,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,a,ivDCpBrC,IAAMG,EAAoBtB,IAAOC,IAAV,KAmCjBsB,EAAYvB,YAAOwB,IAAPxB,CAAH,KAqBTyB,EAAkBzB,IAAOC,IAAV,KAMN,gBAAGyB,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAAsB3B,IAAOC,IAAV,KAYnB2B,EAAU5B,IAAO6B,KAAV,KAIPC,EAAW9B,IAAO6B,KAAV,KCjDNxB,gBACb,MALyB,SAAA0B,GAAQ,MAAK,CACtCC,QAAS,SAAAb,GAAI,OAAIY,EAASC,YAAQb,QAGrBd,EArBQ,SAAC,GAAuB,IAArBc,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,QACtBC,EAA0Bd,EAA1Bc,KAAMC,EAAoBf,EAApBe,MAAOR,EAAaP,EAAbO,SAErB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAUK,GACV,kBAACH,EAAD,KAAWI,IAEb,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQb,IAAOkB,UAAQ,GAAjD","file":"static/js/6.244e3b28.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px){\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-row-gap: 10vw;\r\n    grid-column-gap: 3vw;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageDiv,\r\n  CollectionTitle,\r\n  CollectionItemsDiv\r\n} from './collection.styles';\r\nimport Spinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionPage = ({ collection , match }) => {\r\n  console.log('TEST' , match.url );\r\n  return collection === null ? \r\n  <Spinner /> \r\n  :\r\n  <CollectionPageDiv>\r\n    <CollectionTitle>{collection.title}</CollectionTitle>\r\n    <CollectionItemsDiv>\r\n      {collection.items.map(item => (\r\n        <CollectionItem key={item.id} item={item} />\r\n      ))}\r\n    </CollectionItemsDiv>\r\n  </CollectionPageDiv>\r\n  \r\n  \r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemDiv = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px){\r\n    width: 40vw;\r\n    height: 30vh;\r\n    position: relative;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      } \r\n  \r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px){\r\n    display: block;\r\n    position: absolute;\r\n    height: auto;\r\n    top: 20vh;\r\n    opacity: 0.6;\r\n    min-width: 55px;\r\n    width: 40px;\r\n    padding: 10px;\r\n    border: none;\r\n    line-height: 0px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterDiv = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n\r\n  @media screen and (max-width: 800px){\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const NameDiv = styled.span`\r\n  width: 90%;\r\n`;\r\n\r\nexport const PriceDiv = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n\r\n  @media screen and (max-width: 800px){\r\n    width: 20%;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemDiv,\r\n  CollectionFooterDiv,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameDiv,\r\n  PriceDiv\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemDiv>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterDiv>\r\n        <NameDiv>{name}</NameDiv>\r\n        <PriceDiv>{price}</PriceDiv>\r\n      </CollectionFooterDiv>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Buy\r\n      </AddButton>\r\n    </CollectionItemDiv>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n"],"sourceRoot":""}