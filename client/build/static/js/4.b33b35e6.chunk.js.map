{"version":3,"sources":["pages/shop/shop.component.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx"],"names":["CollectionsOverview","lazy","CollectionPage","ShopPage","match","fetchCollectionsStart","useEffect","className","fallback","exact","path","component","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionFetching","connect","selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","isFetching","SpinnerOverlay","styled","div","SpinnerContainer","Spinner"],"mappings":"8HAAA,oHAWMA,EAAsBC,gBAAK,kBAAM,iCACjCC,EAAiBD,gBAAK,kBAAM,iCAGrBE,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAQC,EAA4B,EAA5BA,sBAMjC,OALAC,qBAAU,WACRD,MAEF,CAACA,IAGC,yBAAKE,UAAU,aACb,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKN,EAAMM,MAAQC,UAAWX,IAC/C,kBAAC,IAAD,CAAOU,KAAI,UAAKN,EAAMM,KAAX,kBAAiCC,UAAWT,OAMzDU,EAAkBC,YAAyB,CAC/CC,UAAWC,MAEEC,sBACbJ,EACA,CAAEP,2BAFWW,CAGbb,I,gCCrCF,kHAEMc,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG7DC,EAAmB,SAAAC,GAAkB,OAChDR,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAGvDd,EAA6BM,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKW,cAG0BT,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,0uBC1BV,IAAMS,EAAiBC,IAAOC,IAAV,KAQdC,EAAmBF,IAAOC,IAAV,KCEdE,IARC,WACd,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD","file":"static/js/4.b33b35e6.chunk.js","sourcesContent":["import React , { useEffect , lazy , Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n// Loading Spinner\r\nimport Spinner from '../../components/with-spinner/with-spinner.component';\r\n// Memoization\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors'\r\n// Comps.\r\nconst CollectionsOverview = lazy(() => import('../../components/collections-overview/collections-overview.component'))\r\nconst CollectionPage = lazy(() => import('../collection/collection.component'))\r\n\r\n\r\nexport const ShopPage = ({ match , fetchCollectionsStart }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  },  \r\n  [fetchCollectionsStart])\r\n\r\n  return (\r\n    <div className='shop-page'>\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview}/>\r\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>      \r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchCollectionsStart }\r\n)(ShopPage);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerOverlay>\r\n      <SpinnerContainer />\r\n    </SpinnerOverlay>\r\n  )\r\n};\r\n\r\nexport default Spinner;\r\n"],"sourceRoot":""}